federated_id          : &FEDERATED_ID
key_vault             : &KEY_VAULT
AzureConnectionString : &AZURE
ScyllaConnectionString: &SCYLLA
ScyllaDatacenterName  : &ScyllaDatacenterName
ScyllaKeyspaceSuffix  : &ScyllaKeyspaceSuffix
OAuthClient           : &OAuthClient
OAuthClientSecret     : &OAUTHSecret
OAuthLoginUrl         : &OAuthLoginUrl
OAuthScope            : &OAuthScope
hostname              : &HOSTNAME
jwtAudience           : &jwtAudience
jwtAuthority          : &jwtAuthority
tenantID              : &TENANT_ID
subscriptionID        : &SUBSCRIPTION_ID

x-jupiter-env:
  env: &jupiter-env
  - name: AZURE_CLIENT_ID
    value: *OAuthClient
  - name: AZURE_TENANT_ID
    value: *TENANT_ID
  - name: AZURE_FEDERATED_TOKEN_FILE
    value: /var/run/secrets/tokens/azure-identity-token

horde-storage:
  config:
    Azure:
      ConnectionString: *AZURE
    Scylla:
      LocalDatacenterName: *ScyllaDatacenterName
      LocalKeyspaceSuffix: *ScyllaKeyspaceSuffix
      ConnectionString: *SCYLLA
  ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-body-size: 0
    hostname: *HOSTNAME
    path: /
    pathType: Prefix
    port: 8080
    tlsSecretName: ingress-tls-csi
    tlsCertName: horde-storage-cert

  secretStore:
    enabled: true
    clientID: *OAuthClient
    keyvaultName: *KEY_VAULT
    subscriptionID: *SUBSCRIPTION_ID
    tenantID: *TENANT_ID

  serviceAccount:
    name: workload-identity-sa
    annotations:
      azure.workload.identity/client-id: *OAuthClient

  env: *jupiter-env

global:
  siteName: unreal-cloud-ddc
  ServiceCredentials:
    OAuthClientId: *OAuthClient
    OAuthClientSecret: *OAUTHSecret
    OAuthLoginUrl: *OAuthLoginUrl
    OAuthScope: *OAuthScope

  auth:
    enabled: true
    defaultScheme: Bearer
    schemes:
      Bearer: 
        implementation: "JWTBearer"
        jwtAuthority: *jwtAuthority
        jwtAudience: *jwtAudience
